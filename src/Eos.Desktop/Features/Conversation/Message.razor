@using System.Diagnostics
@using System.Threading
@using Microsoft.Extensions.AI

<div class="mb-2 bg-white border border-@Color rounded p-2 d-flex flex-column w-100">
    <div class="mb-2 d-flex flex-row justify-content-start">
        <div class="custom-control custom-switch">
            <input type="checkbox"
                   class="custom-control-input"
                   id="customSwitch@(_instanceCheckboxId)"
                   @bind="Model.ShowSource"
                   style="cursor: pointer"/>
            <label class="custom-control-label"
                   for="customSwitch@(_instanceCheckboxId)"
                   style="cursor: pointer"
                   title="toggle source"></label>
        </div>
        <span class="mr-2 text-@Color">
                @Name
            </span>
    </div>

    <div class="d-flex overflow-auto text-nowrap">
        @if (Model.ShowSource)
        {
            <pre>@Model.ChatMessage.Text</pre>
        }
        else
        {
            <Markdown Text="@Model.ChatMessage.Text"/>
        }
    </div>
</div>

@code {
    [Parameter] public required MessageModel Model { get; set; }

    private readonly UInt32 _instanceCheckboxId = Interlocked.Increment(ref _checkboxId);

    private static UInt32 _checkboxId;

    private string Name =>
        Model.ChatMessage.Role == ChatRole.Assistant &&
        Model.ChatMessage.AdditionalProperties is { } props
        && props.TryGetValue("modelId", out var m)
        && m is string { Length: > 0 } name
            ? name
            : Model.ChatMessage.Role.Value;

    private String Color => Model.ChatMessage.Role == ChatRole.User
        ? "primary"
        : Model.ChatMessage.Role == ChatRole.Assistant
            ? "info"
            : "success";

}